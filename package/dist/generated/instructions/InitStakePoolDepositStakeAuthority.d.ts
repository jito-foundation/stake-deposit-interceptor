/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */
import * as beet from '@metaplex-foundation/beet';
import * as web3 from '@solana/web3.js';
import { InitStakePoolDepositStakeAuthorityArgs } from '../types/InitStakePoolDepositStakeAuthorityArgs';
/**
 * @category Instructions
 * @category InitStakePoolDepositStakeAuthority
 * @category generated
 */
export type InitStakePoolDepositStakeAuthorityInstructionArgs = {
    initStakePoolDepositStakeAuthorityArgs: InitStakePoolDepositStakeAuthorityArgs;
};
/**
 * @category Instructions
 * @category InitStakePoolDepositStakeAuthority
 * @category generated
 */
export declare const InitStakePoolDepositStakeAuthorityStruct: beet.BeetArgsStruct<InitStakePoolDepositStakeAuthorityInstructionArgs & {
    instructionDiscriminator: number;
}>;
/**
 * Accounts required by the _InitStakePoolDepositStakeAuthority_ instruction
 *
 * @property [_writable_, **signer**] payer
 * @property [_writable_] depositStakeAuthority
 * @property [_writable_] vaultAta
 * @property [] authority
 * @property [**signer**] base
 * @property [] stakePool
 * @property [] stakePoolMint
 * @property [] stakePoolProgram
 * @property [] associatedTokenProgram
 * @category Instructions
 * @category InitStakePoolDepositStakeAuthority
 * @category generated
 */
export type InitStakePoolDepositStakeAuthorityInstructionAccounts = {
    payer: web3.PublicKey;
    depositStakeAuthority: web3.PublicKey;
    vaultAta: web3.PublicKey;
    authority: web3.PublicKey;
    base: web3.PublicKey;
    stakePool: web3.PublicKey;
    stakePoolMint: web3.PublicKey;
    stakePoolProgram: web3.PublicKey;
    tokenProgram?: web3.PublicKey;
    associatedTokenProgram: web3.PublicKey;
    systemProgram?: web3.PublicKey;
};
export declare const initStakePoolDepositStakeAuthorityInstructionDiscriminator = 0;
/**
 * Creates a _InitStakePoolDepositStakeAuthority_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category InitStakePoolDepositStakeAuthority
 * @category generated
 */
export declare function createInitStakePoolDepositStakeAuthorityInstruction(accounts: InitStakePoolDepositStakeAuthorityInstructionAccounts, args: InitStakePoolDepositStakeAuthorityInstructionArgs, programId?: web3.PublicKey): web3.TransactionInstruction;
